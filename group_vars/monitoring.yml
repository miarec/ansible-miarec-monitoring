---
# -------------------------------------
# Process Exporter
# -------------------------------------
# Define which process to monitor
process_exporter_names: |
  {% raw %}
    - comm:
        - prometheus
        - nginx
        - node_exporter
        - promtail
        - process_exporter
        - grafana-server
        - loki
  {% endraw %}

# -------------------------------------
# Prometheus settings
# -------------------------------------
prometheus_version: "2.28.1"
prometheus_storage_retention: "1y"

prometheus_listen_port: "9090"
prometheus_web_listen_address: "127.0.0.1:{{ prometheus_listen_port }}"
prometheus_web_external_url: "https://{{ prometheus_fqdn }}"

# -------------------------------------
# Loki settings
# -------------------------------------
loki_version: "2.4.2"
loki_local_storage_dir: "etc/loki"

loki_http_listen_port: 3100
loki_grpc_listen_port: 9096
loki_web_listen_address: "127.0.0.1:{{ loki_http_listen_port }}"


# -------------------------------------
# Grafana settings
# -------------------------------------
grafana_version: "8.2.5"
grafana_address: "127.0.0.1"
grafana_port: "3000"
grafana_api_url: "http://{{ grafana_address }}:{{ grafana_port }}"

grafana_domain: "{{ grafana_fqdn }}"
grafana_instance: "{{ grafana_fqdn }}"
grafana_url: "https://{{ grafana_fqdn }}"

grafana_security:
  admin_user: admin
  admin_password: secret

# DATA SOURCES
grafana_datasources:
  - name: Prometheus
    type: prometheus
    isDefault: true
    access: proxy
    url: 'http://{{ prometheus_web_listen_address }}'

# for some reason grafana doesnt like this,   logs ar not present
  - name: Loki
    type: loki
    isDefault: false
    access: direct
    url: 'http://{{ loki_web_listen_address }}'

# DASHBOARDS
grafana_dashboards:

  - name: Node Exporter Full
    dashboard_id: '1860'
    revision_id: '23'
    datasource: Prometheus

  - name: Prometheus Stats
    dashboard_id: '358'
    revision_id: '1'
    datasource: Prometheus

  - name: Process Exporter
    dashboard_id: '249'
    revision_id: '2'
    datasource: Prometheus

# -------------------------------------
# Certbot Variables
# -------------------------------------
certbot_create_if_missing: true
certbot_auto_renew_user: "root"

certbot_certs:
  - email: ssl@miarec.com
    domains:
      - "{{ certbot_domain }}"

certbot_create_command: >-
  certbot certonly
  --noninteractive --agree-tos
  --email ssl@miarec.com
  --nginx
  --domains {{ certbot_domain }}

# -------------------------------------
# nginx variables
# -------------------------------------
nginx_extra_http_options: |
  # this is required to proxy Grafana Live WebSocket connections.
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
nginx_remove_default_vhost: true

nginx_vhosts:
  - listen: "80 default_server"
    server_name: "_"
    return: "301 https://$host$request_uri"

  - listen: "443 ssl http2"
    server_name: "{{ grafana_fqdn }}"
    root: "/usr/share/nginx/html"
    index: "index.html index.htm"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "grafana.conf"
    extra_parameters: |
      ssl_certificate     /etc/letsencrypt/live/{{ grafana_fqdn }}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{ grafana_fqdn }}/privkey.pem;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;
      location / {
        proxy_pass http://localhost:3000/;
      }
      # Proxy Grafana Live WebSocket connections
      location /api/live {
        rewrite  ^/(.*)  /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass http://localhost:3000/;
      }

  - listen: "443 ssl http2"
    server_name: "{{ prometheus_fqdn }}"
    root: "/usr/share/nginx/html"
    index: "index.html index.htm"
    state: "present"
    template: "{{ nginx_vhost_template }}"
    filename: "prometheus.conf"
    extra_parameters: |
      ssl_certificate     /etc/letsencrypt/live/{{ prometheus_fqdn }}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{ prometheus_fqdn }}/privkey.pem;
      ssl_protocols       TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;
      location / {
        proxy_pass http://localhost:9090/;
      }
